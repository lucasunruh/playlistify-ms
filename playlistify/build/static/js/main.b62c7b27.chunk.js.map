{"version":3,"sources":["app/components/custom/Navbar/index.js","app/components/custom/Login/index.js","app/utils/constants.js","app/components/custom/ListPlaylists/ListPlaylists.js","app/components/custom/ListPlaylists/index.js","app/components/custom/ListPlaylistTracks/ListPlaylistTracks.js","app/components/custom/ListPlaylistTracks/index.js","app/components/custom/ListTrackLibrary/ListTrackLibrary.js","app/components/custom/ListTrackLibrary/index.js","app/components/App.js","index.js"],"names":["Navbar","bg","expand","className","Toggle","aria-controls","Collapse","id","Login","setIsAuth","useState","user","setUser","pass","setPass","noAuth","setNoAuth","for","type","onChange","e","target","value","onClick","checkPass","apiPath","ListPlaylists","playlists","addPlaylist","deletePlaylist","current","setCurrent","playlistName","setPlaylistName","editing","setEditing","isEditing","setIsEditing","editName","setEditName","key","placeholder","length","map","playlist","_id","icon","title","name","spin","size","axios","post","then","res","console","log","catch","err","playlistId","delete","data","ListPlaylistsContainer","props","setPlaylists","useEffect","get","ListPlaylistTracks","tracks","addATrack","addTrack","setAddTrack","JSON","parse","track","stringify","put","ListPlaylistTracksContainer","setTracks","ListTrackLibrary","album","artist","isTouched","setIsTouched","isTrack","setIsTrack","isAlbum","setIsAlbum","isArtist","setIsArtist","trackName","setTrackName","albumName","setAlbumName","artistName","setArtistName","setValid","scope","onBlur","onFocus","artists","ListTrackLibraryContainer","trackInfo","library","add","faEdit","faTrashAlt","faStroopwafel","faGripLines","faCheck","faTimes","App","isAuth","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b62c7b27.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Navbar as BNavbar } from 'react-bootstrap'\r\n\r\nconst Navbar = () => (\r\n  <BNavbar bg='light' expand='lg'>\r\n    <button className='navbar-brand nav-color border-0'>Playlistify</button>\r\n    <BNavbar.Toggle aria-controls='basic-navbar-nav' />\r\n    <BNavbar.Collapse id='basic-navbar-nav'>\r\n      <div className='navbar-nav mr-auto'>\r\n        <button className='nav-link nav-color border-0'>Home <span className='sr-only'>(current)</span></button>\r\n      </div>\r\n    </BNavbar.Collapse>\r\n  </BNavbar>\r\n)\r\n\r\nexport default Navbar\r\n","import React, { useState } from 'react'\r\n\r\nconst Login = ({ setIsAuth }) => {\r\n  const [user, setUser] = useState('')\r\n  const [pass, setPass] = useState('')\r\n  const [noAuth, setNoAuth] = useState(false)\r\n  const checkPass = (user, pass) => {\r\n    return user === 'lucas' && pass === 'yeet'\r\n  }\r\n  const checkAuth = () => {\r\n    checkPass(user, pass) ? setIsAuth(true) : setNoAuth(true)\r\n  }\r\n  return (<div className='card'>\r\n    <div className='card-header'>\r\n      <strong>Login to Playlistify</strong>\r\n    </div>\r\n    <div className='card-body'>\r\n      {noAuth && <span className='text-danger'>Nope</span>}\r\n      <div className='form-group'>\r\n        <label for='username'>Username</label>\r\n        <input id='username' type='text' className='form-control' onChange={e => setUser(e.target.value)} />\r\n      </div>\r\n      <div className='form-group'>\r\n        <label for='pass'>Password</label>\r\n        <input id='pass' type='password' className='form-control' onChange={e => setPass(e.target.value)} />\r\n      </div>\r\n      <button className='btn btn-primary' onClick={() => checkAuth()}>Login</button>\r\n    </div>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","// export const apiPath = 'http://localhost:5000'\r\nexport const apiPath = 'https://agile-brook-03586.herokuapp.com'\r\n","import React, { useState } from 'react'\r\nimport { FontAwesomeIcon as Icon } from '@fortawesome/react-fontawesome'\r\n\r\nconst ListPlaylists = ({ playlists, addPlaylist, deletePlaylist, current, setCurrent }) => {\r\n  const [playlistName, setPlaylistName] = useState('')\r\n  const [editing, setEditing] = useState('')\r\n  const [isEditing, setIsEditing] = useState(false)\r\n  const [editName, setEditName] = useState('')\r\n  return (\r\n    <div className='card'>\r\n      <div className='card-header'>\r\n        <strong>Playlists</strong>\r\n      </div>\r\n      <div className='card-body'>\r\n        <table className='table table-hover'>\r\n          <tbody>\r\n            <tr key='addPlaylist'>\r\n              <td className='form-inline'>\r\n                <input className='form-control' type='text' value={playlistName} onChange={e => setPlaylistName(e.target.value)} placeholder={`New Playlist ${'X'}`} />\r\n                <button\r\n                  className='btn btn-primary ml-3'\r\n                  onClick={() => addPlaylist(playlistName)}\r\n                >\r\n            Add\r\n                </button>\r\n              </td>\r\n            </tr>\r\n            {playlists.length > 0 ? playlists.map(playlist => (\r\n              <tr key={playlist._id} className={`arrow ${playlist._id === current._id && 'table-active'}`}>\r\n                <td className='flex-container' onClick={() => setCurrent(playlist)}>\r\n                  {playlist._id === editing\r\n                    ? (\r\n                      <>\r\n                        <input className='form-control' type='text' value={editName} onChange={e => setEditName(e.target.value)} />\r\n                        <Icon\r\n                          className='ml-3 pointer'\r\n                          icon='check'\r\n                          title='Submit'\r\n                          onClick={() => {\r\n                            if (!isEditing) {\r\n                              /* setEditing(playlist._id)\r\n                              setEditName(playlist.name)\r\n                              setIsEditing(true) */\r\n                            } else {\r\n                              setEditing('')\r\n                              setIsEditing(false)\r\n                            }\r\n                          }}\r\n                        />\r\n                        <Icon\r\n                          className='ml-3 pointer'\r\n                          icon='times'\r\n                          title='Cancel'\r\n                          onClick={() => {\r\n                            if (!isEditing) {\r\n                              /* setEditing(playlist._id)\r\n                              setEditName(playlist.name)\r\n                              setIsEditing(true) */\r\n                            } else {\r\n                              setEditing('')\r\n                              setIsEditing(false)\r\n                            }\r\n                          }}\r\n                        />\r\n                      </>\r\n                    )\r\n                    : (\r\n                      <>\r\n                        {playlist.name}\r\n                        <span>\r\n                          <Icon\r\n                            className='ml-3 pointer'\r\n                            icon={['far', 'edit']}\r\n                            onClick={() => {\r\n                              if (!isEditing) {\r\n                                setEditing(playlist._id)\r\n                                setEditName(playlist.name)\r\n                                setIsEditing(true)\r\n                              } else {\r\n                                /* setEditing('')\r\n                                setIsEditing(false) */\r\n                              }\r\n                            }}\r\n                          />\r\n                          <Icon\r\n                            className='ml-3 pointer'\r\n                            icon={['far', 'trash-alt']}\r\n                            onClick={() => deletePlaylist(playlist._id)}\r\n                          />\r\n                        </span>\r\n                      </>\r\n                    )}\r\n                </td>\r\n              </tr>\r\n            ))\r\n              : <><span>Loading Playlists...</span>\r\n                <Icon icon='stroopwafel' spin size='3x' />\r\n              </>}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ListPlaylists\r\n","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { apiPath } from '../../../utils/constants'\r\nimport ListPlaylists from './ListPlaylists'\r\n\r\nconst addPlaylist = playlistName => {\r\n  axios.post(`${apiPath}/playlists/add`, { name: playlistName })\r\n    .then(res => console.log(res))\r\n    .catch(err => console.log(err))\r\n}\r\n\r\nconst deletePlaylist = playlistId => {\r\n  axios.delete(`${apiPath}/playlists/delete`, { data: { _id: playlistId } })\r\n    .then(res => console.log(res))\r\n    .catch(err => console.log(err))\r\n}\r\n\r\nconst ListPlaylistsContainer = props => {\r\n  const [playlists, setPlaylists] = useState([])\r\n  useEffect(() => {\r\n    axios.get(`${apiPath}/playlists`)\r\n      .then(res => setPlaylists(res.data))\r\n  })\r\n  return (\r\n    <ListPlaylists addPlaylist={addPlaylist} deletePlaylist={deletePlaylist} playlists={playlists} {...props} />\r\n  )\r\n}\r\n\r\nexport default ListPlaylistsContainer\r\n","import React, { useState } from 'react'\r\nimport { FontAwesomeIcon as Icon } from '@fortawesome/react-fontawesome'\r\n\r\nconst ListPlaylistTracks = ({ tracks, addATrack, current }) => {\r\n  const [addTrack, setAddTrack] = useState({})\r\n  return (\r\n    <div className='card'>\r\n      {current.name &&\r\n        <div className='card-header'>\r\n          <strong>{current.name}</strong>\r\n        </div>}\r\n      <div className='card-body'>\r\n        {current.name\r\n          ? <table className='table table-hover table-striped'>\r\n            <tbody>\r\n              <tr key='addPlaylistTrack'>\r\n                <td className='form-inline'>\r\n                  <select\r\n                    className='form-control'\r\n                    onChange={e => {\r\n                      setAddTrack(JSON.parse(e.target.value))\r\n                    }}\r\n                  >\r\n                    <option>Choose a song to add</option>\r\n                    {tracks && tracks.map(track => (\r\n                      <option key={track._id} value={JSON.stringify(track)}>{track.name}</option>\r\n                    ))}\r\n                  </select>\r\n                  <button\r\n                    className='btn btn-primary ml-3'\r\n                    onClick={() => addATrack(current, addTrack)}\r\n                  >Add\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n              {current.tracks && current.tracks.map(track => (\r\n                <tr key={track._id} className='arrow'>\r\n                  <td className='flex-container'>\r\n                    {track.name}\r\n                    <span>\r\n                      <Icon className='pointer' icon={['far', 'trash-alt']} />\r\n                      <Icon className='ml-2 pointer' icon='grip-lines' />\r\n                    </span>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n          : <span>Select a playlist to view tracks</span>}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ListPlaylistTracks\r\n","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { apiPath } from '../../../utils/constants'\r\nimport ListPlaylistTracks from './ListPlaylistTracks'\r\n\r\nconst addATrack = (current, addTrack) => {\r\n  axios.put(`${apiPath}/playlists/track/add`,\r\n    {\r\n      _id: current._id,\r\n      id: addTrack._id,\r\n      name: addTrack.name\r\n    })\r\n    .then(res => console.log(res))\r\n    .catch(err => console.log(err))\r\n}\r\n\r\nconst ListPlaylistTracksContainer = props => {\r\n  const [tracks, setTracks] = useState([])\r\n  useEffect(() => {\r\n    axios.get(`${apiPath}/tracks`)\r\n      .then(res => setTracks(res.data))\r\n  })\r\n  return (\r\n    <ListPlaylistTracks addATrack={addATrack} tracks={tracks} {...props} />\r\n  )\r\n}\r\n\r\nexport default ListPlaylistTracksContainer\r\n","import React, { useState } from 'react'\r\nimport { FontAwesomeIcon as Icon } from '@fortawesome/react-fontawesome'\r\n\r\nconst ListTrackLibrary = ({ tracks, addTrack }) => {\r\n  const [isTouched, setIsTouched] = useState({ track: false, album: false, artist: false })\r\n  const [isTrack, setIsTrack] = useState('')\r\n  const [isAlbum, setIsAlbum] = useState('')\r\n  const [isArtist, setIsArtist] = useState('')\r\n  const [trackName, setTrackName] = useState('')\r\n  const [albumName, setAlbumName] = useState('')\r\n  const [artistName, setArtistName] = useState('')\r\n  const setValid = () => {\r\n    !trackName && isTouched.track ? setIsTrack(false) : setIsTrack(true)\r\n    !albumName && isTouched.album ? setIsAlbum(false) : setIsAlbum(true)\r\n    !artistName && isTouched.artist ? setIsArtist(false) : setIsArtist(true)\r\n  }\r\n  const setDetails = () => {\r\n    !trackName && setIsTrack(false)\r\n    !albumName && setIsAlbum(false)\r\n    !artistName && setIsArtist(false)\r\n    if (trackName && albumName && artistName) {\r\n      addTrack({\r\n        trackName: trackName,\r\n        albumName: albumName,\r\n        artistName: artistName\r\n      })\r\n    }\r\n  }\r\n  return (\r\n    <div className='card'>\r\n      <div className='card-header'>\r\n        <strong>Track Library</strong>\r\n      </div>\r\n      <div className='card-body'>\r\n        <table className='table table-striped'>\r\n          <thead>\r\n            <tr>\r\n              <th scope='col'>Track</th>\r\n              <th scope='col'>Album</th>\r\n              <th scope='col'>Artist</th>\r\n              <th scope='col'>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr key='addTrack'>\r\n              <td>\r\n                <input\r\n                  className={`form-control ${isTrack === false && 'is-invalid'}`} type='text' value={trackName}\r\n                  onChange={e => {\r\n                    setTrackName(e.target.value)\r\n                    setIsTrack(true)\r\n                  }}\r\n                  onBlur={setValid}\r\n                  onFocus={() => setIsTouched({ ...isTouched, track: true })}\r\n                  placeholder='New Track'\r\n                />\r\n                {isTrack === false && <div className='invalid-feedback'>Please enter a track name</div>}\r\n              </td>\r\n              <td>\r\n                <input\r\n                  className={`form-control ${isAlbum === false && 'is-invalid'}`} type='text' value={albumName}\r\n                  onChange={e => {\r\n                    setAlbumName(e.target.value)\r\n                    setIsAlbum(true)\r\n                  }}\r\n                  onBlur={setValid}\r\n                  onFocus={() => setIsTouched({ ...isTouched, album: true })}\r\n                  placeholder='Album'\r\n                />\r\n                {isAlbum === false && <div className='invalid-feedback'>Please enter an album name</div>}\r\n              </td>\r\n              <td>\r\n                <input\r\n                  className={`form-control ${isArtist === false && 'is-invalid'}`} type='text' value={artistName}\r\n                  onChange={e => {\r\n                    setArtistName(e.target.value)\r\n                    setIsArtist(true)\r\n                  }}\r\n                  onBlur={setValid}\r\n                  onFocus={() => setIsTouched({ ...isTouched, artist: true })}\r\n                  placeholder='Artist'\r\n                />\r\n                {isArtist === false && <div className='invalid-feedback'>Please enter an artist name</div>}\r\n              </td>\r\n              <td>\r\n                <button\r\n                  className='btn btn-primary'\r\n                  onClick={setDetails}\r\n                >\r\n            Add\r\n                </button>\r\n              </td>\r\n            </tr>\r\n            {tracks && tracks.map(track => (\r\n              <tr key={track._id} className='arrow'>\r\n                <td>{track.name}</td>\r\n                <td>{track.album}</td>\r\n                <td>{track.artists[0].name}</td>\r\n                <td className='text-center'><Icon className='pointer' icon={['far', 'edit']} /></td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ListTrackLibrary\r\n","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { apiPath } from '../../../utils/constants'\r\nimport ListPlaylistTracks from './ListTrackLibrary'\r\n\r\nconst ListTrackLibraryContainer = () => {\r\n  const [tracks, setTracks] = useState([])\r\n  const addTrack = trackInfo => {\r\n    axios.post(`${apiPath}/tracks/add`,\r\n      {\r\n        name: trackInfo.trackName,\r\n        album: trackInfo.albumName,\r\n        artists: [\r\n          {\r\n            id: '-1',\r\n            name: trackInfo.artistName\r\n          }\r\n        ]\r\n      })\r\n      .then(res => console.log(res))\r\n      .catch(err => console.log(err))\r\n  }\r\n  useEffect(() => {\r\n    axios.get(`${apiPath}/tracks`)\r\n      .then(res => setTracks(res.data))\r\n  })\r\n  return (\r\n    <ListPlaylistTracks addTrack={addTrack} tracks={tracks} />\r\n  )\r\n}\r\n\r\nexport default ListTrackLibraryContainer\r\n","import React, { useState } from 'react'\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faEdit, faTrashAlt } from '@fortawesome/free-regular-svg-icons'\r\nimport { faStroopwafel, faGripLines, faCheck, faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport Navbar from './custom/Navbar'\r\nimport Login from './custom/Login'\r\nimport ListPlaylists from './custom/ListPlaylists'\r\nimport ListPlaylistTracks from './custom/ListPlaylistTracks'\r\nimport ListTrackLibrary from './custom/ListTrackLibrary'\r\nimport '../styles/App.css'\r\n\r\nlibrary.add(faEdit, faTrashAlt, faStroopwafel, faGripLines, faCheck, faTimes)\r\n\r\nfunction App () {\r\n  const [current, setCurrent] = useState({})\r\n  const [isAuth, setIsAuth] = useState(true) // false to display login\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div className='container-fluid'>\r\n        {isAuth\r\n          ? (<div className='row'>\r\n            <div className='col-xl-3 col-md-5 mt-3'>\r\n              <ListPlaylists current={current} setCurrent={setCurrent} />\r\n            </div>\r\n            <div className='col-xl-4 col-md-7 mt-3'>\r\n              <ListPlaylistTracks current={current} />\r\n            </div>\r\n            <div className='col-xl-5 mt-3'>\r\n              <ListTrackLibrary />\r\n            </div>\r\n          </div>)\r\n          : (<div className='row justify-content-center'>\r\n            <div className='col-4 mt-3'>\r\n              <Login setIsAuth={setIsAuth} />\r\n            </div>\r\n          </div>)}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport './index.css'\r\nimport App from './app/components/App'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}