{"version":3,"sources":["app/components/custom/Navbar/index.js","app/components/custom/Login/index.js","app/utils/constants.js","app/components/custom/ListPlaylists/ListPlaylists.js","app/components/custom/ListPlaylists/index.js","app/components/custom/ListPlaylistTracks/ListPlaylistTracks.js","app/components/custom/ListPlaylistTracks/index.js","app/components/custom/ListTrackLibrary/ListTrackLibrary.js","app/components/custom/ListTrackLibrary/index.js","app/components/App.js","index.js"],"names":["Navbar","bg","expand","className","Toggle","aria-controls","Collapse","id","Login","setIsAuth","useState","user","setUser","pass","setPass","noAuth","setNoAuth","for","type","onChange","e","target","value","onClick","checkPass","apiPath","ListPlaylists","playlists","addPlaylist","editPlaylist","deletePlaylist","current","setCurrent","playlistName","setPlaylistName","editing","setEditing","isEditing","setIsEditing","editName","setEditName","key","placeholder","length","map","playlist","_id","icon","title","name","spin","size","axios","post","then","res","console","log","catch","err","playlistId","put","delete","data","ListPlaylistsContainer","props","setPlaylists","useEffect","get","ListPlaylistTracks","allTracks","addATrack","removeTrack","addTrack","setAddTrack","JSON","parse","track","stringify","tracks","trackId","_idPlaylist","_idTrack","ListPlaylistTracksContainer","setPlaylist","setAllTracks","ListTrackLibrary","deleteTrack","album","artist","isTouched","setIsTouched","isTrack","setIsTrack","isAlbum","setIsAlbum","isArtist","setIsArtist","trackName","setTrackName","albumName","setAlbumName","artistName","setArtistName","setValid","scope","onBlur","onFocus","artists","ListTrackLibraryContainer","setTracks","trackInfo","library","add","faEdit","faTrashAlt","faStroopwafel","faGripLines","faCheck","faTimes","App","isAuth","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.38472359.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Navbar as BNavbar } from 'react-bootstrap'\r\n\r\nconst Navbar = () => (\r\n  <BNavbar bg='light' expand='lg'>\r\n    <button className='navbar-brand nav-color border-0'>Playlistify</button>\r\n    <BNavbar.Toggle aria-controls='basic-navbar-nav' />\r\n    <BNavbar.Collapse id='basic-navbar-nav'>\r\n      <div className='navbar-nav mr-auto'>\r\n        <button className='nav-link nav-color border-0'>Home <span className='sr-only'>(current)</span></button>\r\n      </div>\r\n    </BNavbar.Collapse>\r\n  </BNavbar>\r\n)\r\n\r\nexport default Navbar\r\n","import React, { useState } from 'react'\r\n\r\nconst Login = ({ setIsAuth }) => {\r\n  const [user, setUser] = useState('')\r\n  const [pass, setPass] = useState('')\r\n  const [noAuth, setNoAuth] = useState(false)\r\n  const checkPass = (user, pass) => {\r\n    return user === 'lucas' && pass === 'yeet'\r\n  }\r\n  const checkAuth = () => {\r\n    checkPass(user, pass) ? setIsAuth(true) : setNoAuth(true)\r\n  }\r\n  return (<div className='card'>\r\n    <div className='card-header'>\r\n      <strong>Login to Playlistify</strong>\r\n    </div>\r\n    <div className='card-body'>\r\n      {noAuth && <span className='text-danger'>Nope</span>}\r\n      <div className='form-group'>\r\n        <label for='username'>Username</label>\r\n        <input id='username' type='text' className='form-control' onChange={e => setUser(e.target.value)} />\r\n      </div>\r\n      <div className='form-group'>\r\n        <label for='pass'>Password</label>\r\n        <input id='pass' type='password' className='form-control' onChange={e => setPass(e.target.value)} />\r\n      </div>\r\n      <button className='btn btn-primary' onClick={() => checkAuth()}>Login</button>\r\n    </div>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","// export const apiPath = 'http://localhost:5000'\r\nexport const apiPath = 'https://agile-brook-03586.herokuapp.com'\r\n","import React, { useState } from 'react'\r\nimport { FontAwesomeIcon as Icon } from '@fortawesome/react-fontawesome'\r\n\r\nconst ListPlaylists = ({ playlists, addPlaylist, editPlaylist, deletePlaylist, current, setCurrent }) => {\r\n  const [playlistName, setPlaylistName] = useState('')\r\n  const [editing, setEditing] = useState('')\r\n  const [isEditing, setIsEditing] = useState(false)\r\n  const [editName, setEditName] = useState('')\r\n  return (\r\n    <div className='card'>\r\n      <div className='card-header'>\r\n        <strong>Playlists</strong>\r\n      </div>\r\n      <div className='card-body'>\r\n        <table className='table table-hover'>\r\n          <tbody>\r\n            <tr key='addPlaylist'>\r\n              <td className='form-inline'>\r\n                <input className='form-control' type='text' value={playlistName} onChange={e => setPlaylistName(e.target.value)} placeholder={`New Playlist ${'X'}`} />\r\n                <button\r\n                  className='btn btn-primary ml-3'\r\n                  onClick={() => addPlaylist(playlistName)}\r\n                >\r\n            Add\r\n                </button>\r\n              </td>\r\n            </tr>\r\n            {playlists.length > 0 ? playlists.map(playlist => (\r\n              <tr key={playlist._id} className={`arrow ${playlist._id === current && 'table-active'}`}>\r\n                <td className='flex-container' onClick={() => setCurrent(playlist._id)}>\r\n                  {playlist._id === editing\r\n                    ? (\r\n                      <>\r\n                        <input className='form-control' type='text' value={editName} onChange={e => setEditName(e.target.value)} />\r\n                        <Icon\r\n                          className='ml-3 pointer'\r\n                          icon='check'\r\n                          title='Submit'\r\n                          onClick={() => {\r\n                            editPlaylist(editName, playlist._id)\r\n                            setEditing('')\r\n                            setIsEditing(false)\r\n                          }}\r\n                        />\r\n                        <Icon\r\n                          className='ml-3 pointer'\r\n                          icon='times'\r\n                          title='Cancel'\r\n                          onClick={() => {\r\n                            setEditing('')\r\n                            setIsEditing(false)\r\n                          }}\r\n                        />\r\n                      </>\r\n                    )\r\n                    : (\r\n                      <>\r\n                        {playlist.name}\r\n                        <span>\r\n                          <Icon\r\n                            className='ml-3 pointer'\r\n                            icon={['far', 'edit']}\r\n                            onClick={() => {\r\n                              if (!isEditing) {\r\n                                setEditing(playlist._id)\r\n                                setEditName(playlist.name)\r\n                                setIsEditing(true)\r\n                              } else {\r\n                                /* setEditing('')\r\n                                setIsEditing(false) */\r\n                              }\r\n                            }}\r\n                          />\r\n                          <Icon\r\n                            className='ml-3 pointer'\r\n                            icon={['far', 'trash-alt']}\r\n                            onClick={() => deletePlaylist(playlist._id)}\r\n                          />\r\n                        </span>\r\n                      </>\r\n                    )}\r\n                </td>\r\n              </tr>\r\n            ))\r\n              : <><span>Loading Playlists...</span>\r\n                <Icon icon='stroopwafel' spin size='3x' />\r\n              </>}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ListPlaylists\r\n","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { apiPath } from '../../../utils/constants'\r\nimport ListPlaylists from './ListPlaylists'\r\n\r\nconst addPlaylist = playlistName => {\r\n  axios.post(`${apiPath}/playlists/add`, { name: playlistName })\r\n    .then(res => console.log(res))\r\n    .catch(err => console.log(err))\r\n}\r\n\r\nconst editPlaylist = (playlistName, playlistId) => {\r\n  axios.put(`${apiPath}/playlists/edit`, { name: playlistName, _id: playlistId })\r\n    .then(res => console.log(res))\r\n    .catch(err => console.log(err))\r\n}\r\n\r\nconst deletePlaylist = playlistId => {\r\n  axios.delete(`${apiPath}/playlists/delete`, { data: { _id: playlistId } })\r\n    .then(res => console.log(res))\r\n    .catch(err => console.log(err))\r\n}\r\n\r\nconst ListPlaylistsContainer = props => {\r\n  const [playlists, setPlaylists] = useState([])\r\n  useEffect(() => {\r\n    axios.get(`${apiPath}/playlists`)\r\n      .then(res => setPlaylists(res.data))\r\n  })\r\n  return (\r\n    <ListPlaylists addPlaylist={addPlaylist} editPlaylist={editPlaylist} deletePlaylist={deletePlaylist} playlists={playlists} {...props} />\r\n  )\r\n}\r\n\r\nexport default ListPlaylistsContainer\r\n","import React, { useState } from 'react'\r\nimport { FontAwesomeIcon as Icon } from '@fortawesome/react-fontawesome'\r\n\r\nconst ListPlaylistTracks = ({ playlist, allTracks, addATrack, removeTrack }) => {\r\n  const [addTrack, setAddTrack] = useState({})\r\n  return (\r\n    <div className='card'>\r\n      {playlist.name &&\r\n        <div className='card-header'>\r\n          <strong>{playlist.name}</strong>\r\n        </div>}\r\n      <div className='card-body'>\r\n        {playlist.name\r\n          ? <table className='table table-hover table-striped'>\r\n            <tbody>\r\n              <tr key='addPlaylistTrack'>\r\n                <td className='form-inline'>\r\n                  <select\r\n                    className='form-control'\r\n                    onChange={e => {\r\n                      setAddTrack(JSON.parse(e.target.value))\r\n                    }}\r\n                  >\r\n                    <option>Choose a song to add</option>\r\n                    {allTracks && allTracks.map(track => (\r\n                      <option key={track._id} value={JSON.stringify(track)}>{track.name}</option>\r\n                    ))}\r\n                  </select>\r\n                  <button\r\n                    className='btn btn-primary ml-3'\r\n                    onClick={() => addATrack(playlist, addTrack)}\r\n                  >Add\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n              {playlist.tracks && playlist.tracks.map(track => (\r\n                <tr key={track._id} className='arrow'>\r\n                  <td className='flex-container'>\r\n                    {track.name}\r\n                    <span>\r\n                      <Icon\r\n                        className='pointer'\r\n                        icon={['far', 'trash-alt']}\r\n                        onClick={() => removeTrack(playlist._id, track._id)}\r\n                      />\r\n                      {/* <Icon className='ml-2 pointer' icon='grip-lines' /> */}\r\n                    </span>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n          : <span>Select a playlist to view tracks</span>}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ListPlaylistTracks\r\n","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { apiPath } from '../../../utils/constants'\r\nimport ListPlaylistTracks from './ListPlaylistTracks'\r\n\r\nconst addATrack = (playlist, addTrack) => {\r\n  axios.put(`${apiPath}/playlists/track/add`,\r\n    {\r\n      _id: playlist._id,\r\n      id: addTrack._id,\r\n      name: addTrack.name\r\n    })\r\n    .then(res => console.log(res))\r\n    .catch(err => console.log(err))\r\n}\r\n\r\nconst removeTrack = (playlistId, trackId) => {\r\n  axios.put(`${apiPath}/playlists/track/remove`,\r\n    {\r\n      _idPlaylist: playlistId,\r\n      _idTrack: trackId\r\n    })\r\n    .then(res => console.log(res))\r\n    .catch(err => console.log(err))\r\n}\r\n\r\nconst ListPlaylistTracksContainer = props => {\r\n  const [playlist, setPlaylist] = useState([])\r\n  const [allTracks, setAllTracks] = useState([])\r\n  useEffect(() => {\r\n    props.current && axios.get(`${apiPath}/playlists/${props.current}`)\r\n      .then(res => setPlaylist(res.data))\r\n  })\r\n  useEffect(() => {\r\n    axios.get(`${apiPath}/tracks`)\r\n      .then(res => setAllTracks(res.data))\r\n  }, [])\r\n  return (\r\n    <ListPlaylistTracks addATrack={addATrack} removeTrack={removeTrack} playlist={playlist} allTracks={allTracks} />\r\n  )\r\n}\r\n\r\nexport default ListPlaylistTracksContainer\r\n","import React, { useState } from 'react'\r\nimport { FontAwesomeIcon as Icon } from '@fortawesome/react-fontawesome'\r\n\r\nconst ListTrackLibrary = ({ tracks, addTrack, deleteTrack }) => {\r\n  const [isTouched, setIsTouched] = useState({ track: false, album: false, artist: false })\r\n  const [isTrack, setIsTrack] = useState('')\r\n  const [isAlbum, setIsAlbum] = useState('')\r\n  const [isArtist, setIsArtist] = useState('')\r\n  const [trackName, setTrackName] = useState('')\r\n  const [albumName, setAlbumName] = useState('')\r\n  const [artistName, setArtistName] = useState('')\r\n  const setValid = () => {\r\n    !trackName && isTouched.track ? setIsTrack(false) : setIsTrack(true)\r\n    !albumName && isTouched.album ? setIsAlbum(false) : setIsAlbum(true)\r\n    !artistName && isTouched.artist ? setIsArtist(false) : setIsArtist(true)\r\n  }\r\n  const setDetails = () => {\r\n    !trackName && setIsTrack(false)\r\n    !albumName && setIsAlbum(false)\r\n    !artistName && setIsArtist(false)\r\n    if (trackName && albumName && artistName) {\r\n      addTrack({\r\n        trackName: trackName,\r\n        albumName: albumName,\r\n        artistName: artistName\r\n      })\r\n    }\r\n  }\r\n  return (\r\n    <div className='card'>\r\n      <div className='card-header'>\r\n        <strong>Track Library</strong>\r\n      </div>\r\n      <div className='card-body'>\r\n        <table className='table table-striped'>\r\n          <thead>\r\n            <tr>\r\n              <th scope='col'>Track</th>\r\n              <th scope='col'>Album</th>\r\n              <th scope='col'>Artist</th>\r\n              <th scope='col'>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr key='addTrack'>\r\n              <td>\r\n                <input\r\n                  className={`form-control ${isTrack === false && 'is-invalid'}`} type='text' value={trackName}\r\n                  onChange={e => {\r\n                    setTrackName(e.target.value)\r\n                    setIsTrack(true)\r\n                  }}\r\n                  onBlur={setValid}\r\n                  onFocus={() => setIsTouched({ ...isTouched, track: true })}\r\n                  placeholder='New Track'\r\n                />\r\n                {isTrack === false && <div className='invalid-feedback'>Please enter a track name</div>}\r\n              </td>\r\n              <td>\r\n                <input\r\n                  className={`form-control ${isAlbum === false && 'is-invalid'}`} type='text' value={albumName}\r\n                  onChange={e => {\r\n                    setAlbumName(e.target.value)\r\n                    setIsAlbum(true)\r\n                  }}\r\n                  onBlur={setValid}\r\n                  onFocus={() => setIsTouched({ ...isTouched, album: true })}\r\n                  placeholder='Album'\r\n                />\r\n                {isAlbum === false && <div className='invalid-feedback'>Please enter an album name</div>}\r\n              </td>\r\n              <td>\r\n                <input\r\n                  className={`form-control ${isArtist === false && 'is-invalid'}`} type='text' value={artistName}\r\n                  onChange={e => {\r\n                    setArtistName(e.target.value)\r\n                    setIsArtist(true)\r\n                  }}\r\n                  onBlur={setValid}\r\n                  onFocus={() => setIsTouched({ ...isTouched, artist: true })}\r\n                  placeholder='Artist'\r\n                />\r\n                {isArtist === false && <div className='invalid-feedback'>Please enter an artist name</div>}\r\n              </td>\r\n              <td>\r\n                <button\r\n                  className='btn btn-primary'\r\n                  onClick={setDetails}\r\n                >\r\n                  Add\r\n                </button>\r\n              </td>\r\n            </tr>\r\n            {tracks && tracks.map(track => (\r\n              <tr key={track._id} className='arrow'>\r\n                <td>{track.name}</td>\r\n                <td>{track.album}</td>\r\n                <td>{track.artists[0].name}</td>\r\n                <td className='text-center'>\r\n                  <Icon className='pointer' icon={['far', 'edit']} />\r\n                  <Icon\r\n                    className='ml-3 pointer'\r\n                    icon={['far', 'trash-alt']}\r\n                    onClick={() => deleteTrack(track._id)}\r\n                  />\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ListTrackLibrary\r\n","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { apiPath } from '../../../utils/constants'\r\nimport ListPlaylistTracks from './ListTrackLibrary'\r\n\r\nconst ListTrackLibraryContainer = () => {\r\n  const [tracks, setTracks] = useState([])\r\n  const addTrack = trackInfo => {\r\n    axios.post(`${apiPath}/tracks/add`,\r\n      {\r\n        name: trackInfo.trackName,\r\n        album: trackInfo.albumName,\r\n        artists: [\r\n          {\r\n            id: '-1',\r\n            name: trackInfo.artistName\r\n          }\r\n        ]\r\n      })\r\n      .then(res => console.log(res))\r\n      .catch(err => console.log(err))\r\n  }\r\n  const deleteTrack = trackId => {\r\n    axios.delete(`${apiPath}/tracks/delete`, { data: { _id: trackId } })\r\n      .then(res => console.log(res))\r\n      .catch(err => console.log(err))\r\n  }\r\n  useEffect(() => {\r\n    axios.get(`${apiPath}/tracks`)\r\n      .then(res => setTracks(res.data))\r\n  })\r\n  return (\r\n    <ListPlaylistTracks addTrack={addTrack} deleteTrack={deleteTrack} tracks={tracks} />\r\n  )\r\n}\r\n\r\nexport default ListTrackLibraryContainer\r\n","import React, { useState } from 'react'\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faEdit, faTrashAlt } from '@fortawesome/free-regular-svg-icons'\r\nimport { faStroopwafel, faGripLines, faCheck, faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport Navbar from './custom/Navbar'\r\nimport Login from './custom/Login'\r\nimport ListPlaylists from './custom/ListPlaylists'\r\nimport ListPlaylistTracks from './custom/ListPlaylistTracks'\r\nimport ListTrackLibrary from './custom/ListTrackLibrary'\r\nimport '../styles/App.css'\r\n\r\nlibrary.add(faEdit, faTrashAlt, faStroopwafel, faGripLines, faCheck, faTimes)\r\n\r\nfunction App () {\r\n  const [current, setCurrent] = useState('')\r\n  const [isAuth, setIsAuth] = useState(true) // false to display login\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div className='container-fluid'>\r\n        {isAuth\r\n          ? (<div className='row'>\r\n            <div className='col-xl-3 col-md-5 mt-3'>\r\n              <ListPlaylists current={current} setCurrent={setCurrent} />\r\n            </div>\r\n            <div className='col-xl-4 col-md-7 mt-3'>\r\n              <ListPlaylistTracks current={current} />\r\n            </div>\r\n            <div className='col-xl-5 mt-3'>\r\n              <ListTrackLibrary />\r\n            </div>\r\n             </div>)\r\n          : (<div className='row justify-content-center'>\r\n            <div className='col-4 mt-3'>\r\n              <Login setIsAuth={setIsAuth} />\r\n            </div>\r\n             </div>)}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport './index.css'\r\nimport App from './app/components/App'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}